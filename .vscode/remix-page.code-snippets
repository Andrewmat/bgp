{
	// Place your bgp workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"remix-page": {
		"scope": "typescript,typescriptreact",
		"prefix": "remix-page",
		"description": "Creates Remix page",
		"body": [
			"import {",
			"\tActionFunctionArgs,",
			"\tLoaderFunctionArgs,",
			"} from '@remix-run/node'",
			"import {",
			"\tjson,",
			"\tuseActionData,",
			"\tuseLoaderData,",
			"} from '@remix-run/react'",
			"",
			"export async function loader({",
			"\trequest,",
			"\tparams,",
			"}: LoaderFunctionArgs) {",
			"\treturn json({})",
			"}",
			"",
			"export async function action({",
			"\trequest,",
			"\tparams,",
			"}: ActionFunctionArgs) {",
			"\treturn json({})",
			"}",
			"",
			"export default function Page() {",
			"\tconst loaderData = useLoaderData<typeof loader>()",
			"\tconst actionData = useActionData<typeof action>()",
			"\treturn <div />",
			"}",
		],
	},
}
